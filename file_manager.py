import os
import re
import shutil

def copy_template(template_dir, project_name):
    """Copies the template project to the destination directory."""
    print(f"üìÅ Copying template from '{template_dir}' to '{project_name}'...")
    if os.path.exists(project_name):
        shutil.rmtree(project_name)
    
    try:
        shutil.copytree(template_dir, project_name)
        print("  ‚úÖ Template copied successfully.")
    except FileNotFoundError:
        print(f"‚ùå Error: Template directory '{template_dir}' not found.")
        return False
    return True

def save_files_from_ai(generated_code, project_name):
    """
    Parses the AI-generated code and overwrites the placeholder files 
    in the project directory.
    """
    print(f"‚úçÔ∏è  Writing AI-generated files to '{project_name}' directory...")
    
    # Regex to find file blocks
    file_pattern = re.compile(r"```.*?FILE: (.*?)\s*\n(.*?)\n```", re.DOTALL)
    
    files = file_pattern.findall(generated_code)
    if not files:
        print("‚ö†Ô∏è No files were generated by the AI in the expected format.")
        return

    for file_path, file_content in files:
        full_path = os.path.join(project_name, file_path.strip())
        
        # Ensure the directory exists before writing
        dir_name = os.path.dirname(full_path)
        if not os.path.exists(dir_name):
            os.makedirs(dir_name)
        
        # Write the file, overwriting the template placeholder
        with open(full_path, "w") as f:
            f.write(file_content.strip())
        print(f"  ‚úÖ Wrote: {full_path}")

